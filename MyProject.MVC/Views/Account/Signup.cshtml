@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Sign Up";
}

<div class="container signup-container">
    <div class="row">
        <!-- Image column -->
        <div class="col-md-6 d-none d-md-block">
            <div class="signup-image-container h-100 d-flex align-items-center justify-content-center">
                <img src="~/img/signup.jpg" alt="Sign Up" class="img-fluid signup-image" onerror="this.src='/Content/images/default-signup.png'; this.onerror='';">
            </div>
        </div>
        
        <!-- Form column -->
        <div class="col-md-6">
            <div class="signup-form-container p-4">
                <h2 class="text-center mb-4">Create an Account</h2>
                <div id="notification" class="mb-3"></div>
                <form action="" id="signupForm"></form>
                
                <!-- Login link -->
                <div class="login-section text-center mt-4">
                    <p class="text-muted">Already have an account? <a href="/Account/Login" class="login-link">Sign In</a></p>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .signup-container {
        margin: 3rem auto;
        max-width: 1000px;
        background: white;
        border-radius: 10px;
        box-shadow: 0 5px 20px rgba(0,0,0,0.1);
        overflow: hidden;
    }
    
    .signup-image-container {
        background-color: #f8f9fa;
        padding: 20px;
    }
    
    .signup-image {
        max-height: 500px;
        border-radius: 8px;
    }
    
    .signup-form-container {
        padding: 30px;
    }
    
    .login-link {
        color: #0275d8;
        font-weight: 500;
        text-decoration: none;
    }
    
    .login-link:hover {
        text-decoration: underline;
    }
    
    /* Form styling */
    .k-form {
        max-width: 100%;
    }
    
    .k-form .k-form-field {
        margin-bottom: 1.5rem;
    }
    
    .k-form .k-label {
        font-weight: 500;
        color: #495057;
    }
    
    .k-form .k-textbox, 
    .k-form .k-dropdown {
        width: 100%;
        border-radius: 4px;
        border: 1px solid #ced4da;
        padding: 8px 12px;
    }
    
    .k-form .k-textbox:focus,
    .k-form .k-dropdown:focus {
        border-color: #0275d8;
        box-shadow: 0 0 0 0.2rem rgba(2, 117, 216, 0.25);
    }
    
    /* Button styling */
    .btn-primary {
        background-color: #0275d8;
        border-color: #0275d8;
        padding: 10px 20px;
        font-weight: 500;
        border-radius: 4px;
        transition: all 0.3s;
        width: 100%;
    }
    
    .btn-primary:hover {
        background-color: #025aa5;
        border-color: #025aa5;
    }
    
    /* Notification styling */
    .k-notification {
        border-radius: 4px;
        box-shadow: 0 2px 8px rgba(0,0,0,0.15);
        padding: 10px 15px;
    }
    
</style>

<script>
    $(document).ready(function () {
        var notification = $("#notification").kendoNotification({
            position: {
                pinned: true,
                top: 30,
                right: 30
            },
            autoHideAfter: 3000,
            stacking: "down",
            templates: [
                {
                    type: "success",
                    template: "<div class='k-notification k-notification-success'><span class='k-icon k-i-check'></span> #= message #</div>"
                },
                {
                    type: "error",
                    template: "<div class='k-notification k-notification-error'><span class='k-icon k-i-warning'></span> #= message #</div>"
                }
            ]
        }).data("kendoNotification");

        $("#signupForm").kendoForm({
            orientation: "vertical",
            formData: {
                c_username: "",
                c_password_hash: "",
                c_role: "",
                c_email: ""
            },
            items: [
                {
                    field: "c_username",
                    label: "Username",
                    validation: { required: true },
                    editor: "TextBox",
                    editorOptions: {
                        placeholder: "Enter your username"
                    }
                },
                {
                    field: "c_password_hash",
                    label: "Password",
                    validation: { required: true, minLength: 6 },
                    editor: "TextBox",
                    editorOptions: {
                        type: "password",
                        placeholder: "Min. 6 characters"
                    }
                },
                {
                    field: "c_role",
                    label: "Role",
                    validation: { required: true },
                    editor: "DropDownList",
                    editorOptions: {
                        dataSource: ["Admin", "Teacher"],
                        optionLabel: "Select your role"
                    }
                },
                {
                    field: "c_email",
                    label: "Email",
                    validation: { required: true, email: true },
                    editor: "TextBox",
                    editorOptions: {
                        placeholder: "example@domain.com"
                    }
                }
            ],
            buttonsTemplate: `<button type="submit" class="btn btn-primary">Create Account</button>`,
            submit: function (e) {
                e.preventDefault();

                let Role = e.model.c_role.toLowerCase();
                let Email = e.model.c_email.toLowerCase();
                const RegisterData = new FormData();
                RegisterData.append("Username", e.model.c_username);
                RegisterData.append("PasswordHash", e.model.c_password_hash);
                RegisterData.append("Email", Email);
                RegisterData.append("Role", Role);

                $.ajax({
                    url: "http://localhost:5111/api/userApi/signup",
                    type: "POST",
                    data: RegisterData,
                    contentType: false,
                    processData: false,
                    success: function (response) {
                        notification.show({ message: "Signup successful!" }, "success");
                        $("#signupForm").data("kendoForm").clear();
                    },
                    error: function (xhr, status, error) {
                        let errorMessage = "‚ùå Signup failed. Try again!";

                        if (xhr.status === 400) {
                            let responseJson = JSON.parse(xhr.responseText);
                            errorMessage = responseJson.message;
                        }

                        console.error("Signup Error:", xhr.responseText);
                        notification.show({ message: errorMessage }, "error");
                    }
                });
            }
        });
    });
</script>







